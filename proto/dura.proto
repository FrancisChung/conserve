package duralib.proto;

// One ArchiveHeader in '/DURA-ARCHIVE' in the root of the archive directory.
message ArchiveHeader {
    // Literal "dura archive"
    required string magic = 1;

    // Clients must understand these features to safely read the archive.
    repeated string required_read_flags = 2;

    // Clients must understand these features to safely write the archive.
    repeated string required_write_flags = 3;
}

enum FileType {
    UNKNOWN = 0;
    REGULAR = 1;
    DIRECTORY = 2;
    SYMLINK = 3;
}


// One FileIndex per file version.
message FileIndex {
    // File path from backup root (generally utf-8).  (Required for all current files.)
    optional bytes path = 1;

    optional FileType file_type = 2;

    // SHA-1 hash of the contents of the file, as plain bytes (not hex).
    optional bytes data_sha1 = 3;

    // Length of the file body.
    optional int64 data_length = 4;

    // Offset of the body within the block data file.
    optional int64 data_offset = 5;

    // TODO(mbp): mtime, owner, group, perms, ...
}


// One BlockIndex in '.i' for each data block.
message BlockIndex {
    // Information about all files in the block, in filename order.
    repeated FileIndex file = 1;

    // Hash and length of the whole data file.
    optional bytes data_sha1 = 2;
    optional int64 data_length = 3;
}

// vim: et sw=4
